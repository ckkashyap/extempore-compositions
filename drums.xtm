; (define *gm-kick* 35)
; (define *gm-kick-2* 36)
; (define *gm-side-stick* 37)
; (define *gm-snare* 38)
; (define *gm-hand-clap* 39)
; (define *gm-snare-2* 40)
; (define *gm-low-floor-tom* 41)
; (define *gm-closed-hi-hat* 42)
; (define *gm-hi-floor-tom* 43)
; (define *gm-pedal-hi-hat* 44)
; (define *gm-low-tom* 45)
; (define *gm-open-hi-hat* 46)
; (define *gm-low-mid-tom* 47)
; (define *gm-hi-mid-tom* 48)
; (define *gm-crash* 49)
; (define *gm-hi-tom* 50)
; (define *gm-ride* 51)
; (define *gm-chinese* 52)
; (define *gm-ride-bell* 53)
; (define *gm-tambourine* 54)
; (define *gm-splash* 55)
; (define *gm-cowbell* 56)
; (define *gm-crash-2* 57)
; (define *gm-vibraslap* 58)
; (define *gm-ride-2* 59)
; (define *gm-hi-bongo* 60)
; (define *gm-low-bongo* 61)
; (define *gm-mute-hi-conga* 62)
; (define *gm-hi-conga* 63)
; (define *gm-low-conga* 64)
; (define *gm-hi-timbale* 65)
; (define *gm-low-timbale* 66)
; (define *gm-hi-agogo* 67)
; (define *gm-low-agogo* 68)
; (define *gm-cabasa* 69)
; (define *gm-maracas* 70)
; (define *gm-short-whistle* 71)
; (define *gm-long-whistle* 72)
; (define *gm-short-guiro* 73)
; (define *gm-long-guiro* 74)
; (define *gm-claves* 75)
; (define *gm-hi-wood-block* 76)
; (define *gm-low-wood-block* 77)
; (define *gm-mute-cuica* 78)
; (define *gm-open-cuica* 79)
; (define *gm-mute-triangle* 80)
; (define *gm-open-triangle* 81)
; (define *gm-mute-surdo* 86)
; (define *gm-open-surdo* 87)


(sys:load "libs/external/instruments_ext.xtm")
(define drum-path "/home/extempore/Downloads/99drums/")
(set-sampler-index drums (string-append drum-path "kick-slapback.wav") *gm-kick* 0 0 0 1)
(set-sampler-index drums (string-append drum-path "kick-big.wav") *gm-kick-2* 0 0 0 1)
;(set-sampler-index drums (string-append drum-path "snare-808.wav") *gm-side-stick* 0 0 0 1)
;(set-sampler-index drums (string-append drum-path "snare-chester.wav") *gm-snare* 0 0 0 1)

; (define drum-path "/home/extempore/Downloads/OH/")
; (set-sampler-index drums (string-append drum-path "kick_OH_F_9.wav") *gm-kick* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "snareStick_OH_F_9.wav") *gm-side-stick* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "snare_OH_FF_9.wav") *gm-snare* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "hihatClosed_OH_F_20.wav") *gm-closed-hi-hat* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "hihatFoot_OH_MP_12.wav") *gm-pedal-hi-hat* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "hihatOpen_OH_FF_6.wav") *gm-open-hi-hat* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "loTom_OH_FF_8.wav") *gm-low-floor-tom* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "hiTom_OH_FF_9.wav") *gm-hi-floor-tom* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "crash1_OH_FF_6.wav") *gm-crash* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "ride1_OH_FF_4.wav") *gm-ride* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "china1_OH_FF_8.wav") *gm-chinese* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "cowbell_FF_9.wav") *gm-cowbell* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "bellchime_F_3.wav") *gm-open-triangle* 0 0 0 1)
; (set-sampler-index drums (string-append drum-path "ride1Bell_OH_F_6.wav") *gm-ride-bell* 0 0 0 1)




(define parse-sounds
  (lambda (file-list)
    (map (lambda (fname)
           (let ((result (regex:matched fname "(.*\.wav)([0-9]+)$")))
             (if (null? result)
                 (begin (println 'Cannot 'parse 'filename: fname)
                        #f)
                 ;; load 4th velocity layer only



                 (if #t
                     (list (car (cdr result))
                           (string->number (car (cdr (cdr result))))
                           0                 
                           0)
                     #f))))

(car (cdr (foldr (lambda (i j) 
	 (let (
	       (v (car j))
	       (lst (car (cdr j)))
	       )
	   (list (+ 1 v) (cons (string-append i (number->string v)) lst))))
       (list 0 ())
       file-list)))


           )))


(load-sampler drums
	      "/home/extempore/Downloads/99drums/"
              0 ;; 'sound bank' index
              parse-sounds)
